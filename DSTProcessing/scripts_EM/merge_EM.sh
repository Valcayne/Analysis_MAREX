# This script produces an executeable .sh that merges into the general ntof data processing scripts
# The intention is to make the processing much faster (1 hour vs. 2 days)
# tcsh shell programming: http://www-cs.canisius.edu/ONLINESTUFF/UNIX/shellprogramming.html
# Michael Bacak michael.bacak@cern.ch

u="$USER"

fileName=$1.merge.sh.script.sh
RunNumber=${1#"run"}
destdir=$2


if [ "$u" == "ntofpro" ]; then
  destdir=/eos/experiment/ntof/processing/official/$RunNumber
  EOSPATH=root://eospublic.cern.ch
else
  if [[ $destdir = *"afs"* ]]; then
    EOSPATH=
  else
#    EOSPATH=root://eosuser.cern.ch/
    EOSPATH=
  fi
  
fi

#echo fileName   $fileName
#echo EOSPATH   $EOSPATH
#echo RunNumber   $RunNumber
#echo destdir   $destdir
#echo "$EOSPATH/${destdir}/"    $EOSPATH/${destdir}/


echo '#! /bin/bash' > $fileName
echo '# THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY ' $USER >> $fileName
echo '# DO NOT ERASE BEFORE BATCH JOBS ARE COMPLETED' >> $fileName
echo ' ' >> $fileName
echo 'locdir=`pwd`'>> $fileName
echo 'echo $locdir'>> $fileName
echo 'echo' >> $fileName
echo ' ' >> $fileName


# check if EOS is available
#echo ' ' >> $fileName
#echo 'EOSAvailable=`ls '$EOSPATH' |& grep -c cannot`' >> $fileName
#echo 'while [ "$EOSAvailable" != 0 ]' >> $fileName
#echo 'do' >> $fileName
#echo '  echo EOS not available-$EOSAvailable going to sleep' >> $fileName
#echo '  sleep' 300 >> $fileName
#echo '  EOSAvailable=`ls '$EOSPATH' |& grep -c cannot`' >> $fileName
#echo '  echo EOSAvailable $EOSAvailable' >> $fileName
#echo 'done' >> $fileName
#echo ' ' >> $fileName


echo ' ' >> $fileName
echo ' ' >> $fileName
echo 'echo' >> $fileName
echo 'echo "Copy single files to local:"' >> $fileName
echo 'for rootfiles in `ls ' $destdir '| grep -E '"'"'run.*.root|history|settings'"'"' | sort -n`; do' >> $fileName
echo '  echo $rootfiles' >> $fileName
echo '  'xrdcp -f -N ${EOSPATH}/${destdir}/'$rootfiles' '${locdir}'/. >> $fileName
echo 'done' >> $fileName

echo ' ' >> $fileName
echo ' ' >> $fileName
echo 'echo' >> $fileName
echo 'ls -lh' >> $fileName

echo ' ' >> $fileName
echo ' ' >> $fileName
echo 'echo' >> $fileName
echo 'echo "Merging files:"' >> $fileName
echo 'hadd -f ${locdir}/merged_'$1'.root ${locdir}/*.root  > merged_'$1'.root.out 2>&1' >> $fileName
echo 'more merged_'$1'.root.out' >> $fileName

echo ' ' >> $fileName
echo ' ' >> $fileName
echo 'echo' >> $fileName
echo 'ls -lh' >> $fileName

echo ' ' >> $fileName
echo ' ' >> $fileName
echo 'echo' >> $fileName
echo 'echo "Copy merged file to EOS:"' >> $fileName
echo xrdcp -f -N '${locdir}'/merged_$1.root $EOSPATH/${destdir}/.  >> $fileName

echo ' ' >> $fileName
echo ' ' >> $fileName
echo 'echo' >> $fileName
echo 'ls -lh' >> $fileName

echo ' ' >> $fileName
echo ' ' >> $fileName
echo 'echo' >> $fileName
echo 'rm -rf *.root*' >> $fileName

echo ' ' >> $fileName
echo ' ' >> $fileName
echo 'echo' >> $fileName

chmod +x $fileName















#echo '#! /bin/tcsh' > $fileName
#echo '# THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY ' $USER >> $fileName
#echo '# DO NOT ERASE BEFORE BATCH JOBS ARE COMPLETED' >> $fileName
#echo '  set locdir=`pwd`'>> $fileName
#echo '  set destdir=$LS_SUBCWD' >> $fileName
#echo 'else' >> $fileName
#echo '  set locdir=/tmp/$USER' >> $fileName
#echo '  set destdir='$destdir/  >> $fileName
#echo '  mkdir -p $locdir '  >> $fileName
#echo '  cd $locdir '  >> $fileName
#echo 'endif' >> $fileName


# check if EOS is available
#echo ' ' >> $fileName
#echo 'set EOSAvailable=`ls '$EOSPATH' |& grep -c cannot`' >> $fileName
#echo 'while ( "$EOSAvailable" != 0 )' >> $fileName
#echo '  echo EOS not available-$EOSAvailable going to sleep' >> $fileName
#echo '  sleep' 300 >> $fileName
#echo '  set EOSAvailable=`ls '$EOSPATH' |& grep -c cannot`' >> $fileName
#echo '  echo EOSAvailable $EOSAvailable' >> $fileName
#echo 'end' >> $fileName
#echo ' ' >> $fileName


